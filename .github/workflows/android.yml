name: Android CI

on:
  push: { branches: ["**"] }
  pull_request: { branches: ["**"] }

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - uses: android-actions/setup-android@v3

      # 1) Fail fast if the secret is missing (no more silent failures)
      - name: Check required secrets
        run: |
          if [ -z "${{ secrets.GEMINI_API_KEY }}" ]; then
            echo "::error::Missing repository secret GEMINI_API_KEY"; exit 1
          fi

      # 2) Install the exact Android SDK components your project needs
      - name: Install Android SDK packages (API 35)
        run: |
          sdkmanager --install \
            "platform-tools" \
            "platforms;android-35" \
            "build-tools;35.0.0"

      # 3) Print what actually got installed (diagnostic)
      - name: Show installed SDK bits
        run: |
          sdkmanager --list_installed || true
          echo "---- Build-tools ----"
          ls -la "${ANDROID_SDK_ROOT}/build-tools" || true
          echo "---- Platforms ----"
          ls -la "${ANDROID_SDK_ROOT}/platforms" || true

      - uses: gradle/actions/setup-gradle@v3

      - name: Make wrapper executable
        run: chmod +x ./gradlew

      # 4) Run a clean (verbose) so config errors are obvious
      - name: Gradle clean (verbose)
        run: ./gradlew clean --no-daemon --stacktrace --info

      # 5) Build the APK with the secret passed in
      - name: Build APK
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: ./gradlew assembleDebug --no-daemon --stacktrace --info -PGEMINI_API_KEY="${GEMINI_API_KEY}"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/*.apk
